package com.babas.views.dialogs;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;

public class DesingTxtTable {
    private JPanel contentPane;
    private JLabel string0;
    private JLabel string1;
    private JLabel string2;
    private JPanel pane;

    public DesingTxtTable(Component component) {
        contentPane.setBorder(null);
        contentPane.setBackground(component.getBackground());
        this.string0.setForeground(component.getForeground());
        this.string0.setBackground(component.getBackground());
        this.string1.setBackground(new JTextField().getSelectionColor());
        this.string1.setForeground(new JTextField().getSelectedTextColor());
        this.string2.setForeground(component.getForeground());
        this.string2.setBackground(component.getBackground());
    }

    public void setHorizontalAlignment(int aligment) {
        switch (aligment) {
            case 0:
                GridLayoutManager gridLayoutManager = (GridLayoutManager) contentPane.getLayout();
                gridLayoutManager.addLayoutComponent(pane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
                break;
            case 4:
                gridLayoutManager = (GridLayoutManager) contentPane.getLayout();
                gridLayoutManager.addLayoutComponent(pane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
                break;
            default:
                break;
        }
    }

    public void setString0(String string0) {
        this.string0.setText(string0);
    }

    public void setString1(String string1) {
        this.string1.setText(string1);
    }

    public void setString2(String string2) {
        this.string2.setText(string2);
    }

    public JPanel getContentPane() {
        return contentPane;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(1, 1, new Insets(0, 2, 0, 2), 0, -1));
        pane = new JPanel();
        pane.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        pane.setOpaque(false);
        contentPane.add(pane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        string0 = new JLabel();
        string0.setText("label");
        pane.add(string0, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        string1 = new JLabel();
        string1.setOpaque(true);
        string1.setText("Label");
        pane.add(string1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        string2 = new JLabel();
        string2.setText("Label");
        pane.add(string2, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
